% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ddply_getFeatures.R
\name{ddply_getFeatures}
\alias{ddply_getFeatures}
\title{Compute the quadratic, linear, and/or discrete features of multiple variables for a
single group}
\usage{
ddply_getFeatures(y, .variables, cont = NULL, disc = NULL,
  centerScale = TRUE, stats = c("min", "q1", "mean", "med", "q3", "max",
  "sd", "count"), fitQargs = NULL, nJobs = 1)
}
\arguments{
\item{y}{Data frame, each row containing a vector of measurements for a particular point in time,
with columns indicating the discrete and/or continuous measured variables (and possibly other
descriptive variables).  The data processed presuming the rows are orderd chronologically.}

\item{.variables}{character vector with variable names in \code{y} that will
be used to split the data. These combinations of the variables uniquely identify
the groups for which the features will be separately extracted.  This is passed
directly to the argument of the same name in \code{\link[plyr:ddply]{plyr::ddply}}.}

\item{cont}{Vector of integers or a character vector indicating the columns
of \code{x} that correspond to continuous variables.  These are the variables from which features
will be extracted by fitting the moving regression model using \code{\link{fitQ}}.}

\item{disc}{Vector of integers or character vector indicating the columns
of \code{x} that correspond to variables that will be treated as discrete. These are the variables
from which features will be extracted using \code{\link{discFeatures}}.}

\item{centerScale}{Logical indicating whether the continuous variables (indicate by \code{cont})
should be centered and scaled by the global mean and standard deviation of that variable.  By
'global', we mean all the values of a continuous variable, say \code{x}, in \code{y} are used
to compute the mean and standard deviation.  The resulting value for the continuous variable,
\code{x}, is equivalent to \code{y$x <- (y$x - mean(y$x)) / sd(y$x)}.}

\item{stats}{This argument defines the summary statistics that will be calculated
for each of the regression parameters.  It can be a character vector of summary statistics,
which are passed to \code{\link{summaryStats}}.  Or the function object returned by
\code{\link{summaryStats}} may be supplied.}

\item{fitQargs}{Named list of arguments for \code{\link{fitQ}}. If \code{NULL}, the default
arguments of \code{\link{fitQ}} are used. Any argument for \code{\link{fitQ}} may be included
except \code{y}.}

\item{nJobs}{The number of parallel jobs to run when extracting the features.}
}
\value{
A dataframe with one row for each grouping defined by \code{.variables}.
The features computed by \code{\link{getFeatures}} is presented across the columns.
}
\description{
This is a wrapper that implements \code{\link{getFeatures}} for each group in a data
frame using \code{\link[plyr:ddply]{plyr::ddply}}.
}
\details{
A least one of \code{cont} or \code{disc} must be specified.

Instead of a data frame, the \code{y} argument can be a
\code{valid_getFeatures_args} object (returned by \code{\link{check_getFeatures_args}}), in which
case all the subsequent arguments to \code{getFeature} are ignored
(because the \code{valid_getFeatures_args} object contains all those arguments).

Parallel processing,
if requested via \code{nJobs > 1}, is facilitated via \code{\link[Smisc:pddply]{Smisc::pddply}},
a wrapper for parallelized calls to \code{\link[plyr:ddply]{plyr::ddply}}.
}
\examples{
# Load the data
data(demoData)
str(demoData)

# Calculate features for each subset defined by the unique combinations of
# "subject" and "phase", calculate the mean and standard deviation summary
# statistics to summarize the coefficients of the quadratic model fits
f <- ddply_getFeatures(demoData, c("subject", "phase"),
                      cont = 3:4, disc = 8:9, stats = c("mean", "skew"),
                      fitQargs = list(x1 = -5:5), nJobs = 2)

str(f)
head(f)
}
\author{
Landon Sego
}
\references{
Amidan BG, Ferryman TA. 2005.  "Atypical Event and Typical Pattern Detection within Complex Systems."
IEEE Aerospace Conference Proceedings, March 2005.
}

